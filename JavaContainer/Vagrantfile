ENV['VAGRANT_DEFAULT_PROVIDER'] = 'docker'


Vagrant.configure("2") do |config|

  config.vm.synced_folder "c:/introduction-docker-workshop/share-with-container", "/host_share"
  config.vm.synced_folder "c:/introduction-docker-workshop/software/java", "/software"

  config.vm.define "java-puppet-container" do |m|
    m.vm.provider :docker do |d| 
      d.build_dir = "./docker"
      d.cmd = ["ping", "-c 551", "127.0.0.1"] 
	  d.name = 'java-puppet-container'
      d.vagrant_machine = "dockerhost"
      d.vagrant_vagrantfile = "../DockerHost/DockerHostVagrantfile" 
      d.remains_running = true 

	  end
  end 
  # note: after docker completes
  # get into the container
  # docker exec -it <container id> bash
  # and run Puppet:
  # puppet apply --modulepath=/puppet/modules /puppet/manifests/base.pp
  
  
  config.vm.define "java7-container" do |m|
  
    m.vm.provider "docker" do |master|
        master.image = "my-java-image:version1"
		master.cmd=["tail", "--f", "/dev/null"] ## to keep container running - see http://stackoverflow.com/questions/30209776/docker-container-will-automatically-stop-after-docker-run-d 		
	    master.name = 'java7-container'
        master.vagrant_machine = "dockerhost"
        master.vagrant_vagrantfile = "../DockerHost/DockerHostVagrantfile" 
        master.remains_running = true 
	end
  end
  
end  
